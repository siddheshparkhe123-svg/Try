import requests

API_URL = "https://pan"                     # Replace with the real endpoint
API_KEY = "your_api_key_here"               # Replace with your actual key

def call_pan_api(pan: str, consent: str) -> dict:
    """
    Makes the POST request to the external PAN API.
    """
    headers = {
        "api-key": API_KEY,
        "Content-Type": "application/json"
    }

    payload = {
        "pan": pan,
        "consent": consent
    }

    response = requests.post(API_URL, headers=headers, json=payload)

    if response.status_code == 200:
        return response.json()
    else:
        raise Exception(f"API failed [{response.status_code}]: {response.text}")

from clients.pan_client import call_pan_api

def verify_pan(pan: str, consent: str) -> dict:
    """
    Business logic: validates input and calls the client.
    """
    if not pan:
        raise ValueError("PAN cannot be empty")
    
    if consent not in ["Y", "N"]:
        raise ValueError("Consent must be 'Y' or 'N'")
    
    return call_pan_api(pan, consent)



from services.pan_service import verify_pan

class PanController:
    @staticmethod
    def process_pan_request(pan: str, consent: str):
        """
        Controller method to handle incoming PAN verification request.
        """
        try:
            result = verify_pan(pan, consent)
            return {"status": "success", "data": result}
        except Exception as e:
            return {"status": "error", "message": str(e)}




from controllers.pan_controller import PanController

if __name__ == "__main__":
    pan = "ABCDE1234F"     # sample PAN
    consent = "Y"

    response = PanController.process_pan_request(pan, consent)
    print(response)

